# import pandas as pd

# print(pd.__version__)
# import pyreadstat

# # 파일 경로 지정 (예: "data.sav")
# df, meta = pyreadstat.read_sav("po.sav")

# # 데이터 확인
# print(df.head())

# # 메타데이터 확인 (변수 라벨 등)
# print(meta.column_names)
# print(meta.column_labels)

# -------------------------------------

import pandas as pd

import sys
import io

sys.stdout = io.TextIOWrapper(sys.stdout.detach(), encoding='utf-8')

# 내부적으로 pyreadstat 사용
# df = pd.read_spss("po.sav")

# print(df.head())

# import pandas as pd

# # .sav 파일 읽기
# df = pd.read_spss("po.sav")  # 예: "data.sav"

# # .csv 파일로 저장
# df.to_csv("po.csv", index=False, encoding='utf-8-sig')

# ----------------------------------------------------------------------
# import pandas as pd

# # CSV 파일 불러오기
# df = pd.read_csv("data.csv", encoding="utf-8-sig")  # 필요 시 encoding="euc-kr"

# # ✔️ 주요 컬럼 이름 변경 (선택적: 분석이 쉬운 이름으로 변경)
# df.rename(columns={
#     'SQ1': '성별',
#     'SQ2_R': '연령대',
#     'SQ3': '지역',
#     'Q1': '기후변화_관심도',
#     'Q2': '기후변화_심각성인식',
#     'Q5': '기후변화_건강영향',
#     'Q7': '기후변화_사회적_취약계층',
#     'Q8': '정보접촉_오프라인',
#     'Q9': '정보접촉_온라인',
#     'Q17_1': '정부책임_인식개선',
#     'Q17_2': '정부책임_기술개발',
#     'Q18': '참여경험',
#     'Q19': '참여빈도',
#     'Q20': '정책중요성_개인',
#     'Q21': '정책중요성_국가',
#     'DQ1': '직업',
#     'DQ2': '학력',
#     'DQ3': '소득',
#     'DQ4': '계층의식'
# }, inplace=True)

# # ✔️ 범주형 텍스트 정리 (필요에 따라 매핑 예시)
# # 예시: 연령대 매핑
# 연령대_순서 = ['10대', '20대', '30대', '40대', '50대', '60대 이상']
# df['연령대'] = pd.Categorical(df['연령대'], categories=연령대_순서, ordered=True)
# print(df['연령대'].value_counts())

# # ✔️ 성별 확인 (이미 텍스트로 되어 있음)
# # print(df['성별'].value_counts())

# # ✔️ 기본 통계 확인
# print(df['기후변화_심각성인식'].value_counts())
# print(df['참여경험'].value_counts())

# # ✔️ 분석용 예시: 성별 vs 기후변화 심각성 인식
# cross_tab = pd.crosstab(df['기후변화_사회적_취약계층'], df['기후변화_심각성인식'], normalize='index') * 100
# print("\n[기후변화_사회적_취약계층 vs 기후변화 심각성 인식 비율 (%)]:")
# print(cross_tab.round(1))

#=================================================================
# import pandas as pd

# # CSV 파일 불러오기
# df = pd.read_csv("data.csv", encoding="utf-8-sig")  # 필요 시 encoding="euc-kr"

# # ✔️ 주요 컬럼 이름 변경 (선택적: 분석이 쉬운 이름으로 변경)
# df.rename(columns={
#     'SQ1': '성별',
#     'SQ2': '나이',
#     'SQ2_R': '연령대',
#     'SQ3': '거주지역',
#     'Q1': '기후변화에 대한 인식',
#     'Q2': '기후변화_심각성인식',
#     'Q5': '기후변화_체감 영역',
#     'Q7': '기후변화_사회적_취약계층',
#     'Q8': '정보접촉_오프라인',
#     'Q9': '정보접촉_온라인',
#     'Q17_1': '정부책임_인식개선',
#     'Q17_2': '정부책임_기술개발',
#     'Q18': '참여경험',
#     'Q19': '참여빈도',
#     'Q20': '정책중요성_개인',
#     'Q21': '정책중요성_국가',
#     'DQ1': '직업',
#     'DQ2': '학력',
#     'DQ3': '소득',
#     'DQ4': '계층의식'
# }, inplace=True)

# # ✔️ 범주형 텍스트 정리
# # 예시: 연령대 매핑
# # SQ. 응답자 일반사항
# 성별_맵 = {1: '남성', 2: '여성'}
# 연령대_맵 = {1: '10대', 2: '20대', 3: '30대', 4: '40대', 5: '50대', 6: '60대 이상'}
# 거주지역_맵 = {
#     1: '서울', 2: '부산', 3: '대구', 4: '인천', 5: '광주', 6: '대전', 7: '울산',
#     8: '경기', 9: '강원', 10: '충북', 11: '충남', 12: '세종', 13: '전북', 14: '전남',
#     15: '경북', 16: '경남', 17: '제주'
# }

# # Part A. 기후변화 인식
# 문1_관심도_맵 = {1: '매우 많다', 2: '어느정도 있다', 3: '별로 없다', 4: '전혀 없다'}
# 문2_심각성_맵 = {1: '매우 심각하다', 2: '어느정도 심각하다', 3: '별로 심각하지 않다', 4: '전혀 심각하지 않다'}
# 문3_체감영역_맵 = {
#     1: '폭염', 2: '폭우·태풍·장마', 3: '폭설·강설 감소', 4: '가뭄·산불 증가',
#     5: '생태계 파괴·생물다양성 훼손', 6: '감염병', 7: '기타'
# }
# 문4_5_인지도_맵 = {1: '매우 잘 안다', 2: '어느정도 안다', 3: '잘 모른다', 4: '전혀 모른다'}
# 문6_인간영향_맵 = {
#     1: '생명 위협', 2: '건강 위협', 3: '주거환경 우려', 4: '식량/물 우려',
#     5: '경제적 자유 침해', 6: '기타'
# }
# 문7_건강영향_맵 = {
#     1: '감염병 발생', 2: '재난 증가', 3: '온도 변화', 4: '식량 위기',
#     5: '해수면 상승', 6: '기타'
# }
# 문8_삶영향_맵 = 문2_심각성_맵.copy()
# 문9_피해집단_맵 = {
#     1: '농어민', 2: '야외노동자', 3: '청소년', 4: '경제적 취약계층',
#     5: '신체적 취약계층', 6: '기타'
# }
# 문10_11_정보접촉_맵 = {
#     1: '매우 자주', 2: '어느정도 자주', 3: '별로 접하지 않음', 4: '전혀 접하지 않음'
# }
# 문12_접촉수단_맵 = {
#     1: '도서/다큐', 2: 'TV/라디오/팟캐스트', 3: '온라인 뉴스',
#     4: '신문·방송 뉴스', 5: '소셜미디어', 6: '커뮤니케이션 서비스', 7: '기타'
# }
# 문13_정보출처_맵 = {
#     1: '도서/다큐', 2: '신문·방송 뉴스', 3: '소셜미디어',
#     4: '정부', 5: '가족·친구·동료', 6: '국제기구', 7: '시민단체', 8: '기타'
# }
# 문14_정책고려_맵 = {
#     1: '인력·예산 확대', 2: '기술개발', 3: '취약계층 보호',
#     4: '인식개선·홍보', 5: '국제협력', 6: '기타'
# }

# # Part B. 관심 및 참여
# 문15_참여경험_맵 = {
#     1: '자주', 2: '가능한 자주', 3: '참여한 적 있음', 4: '전혀 없음'
# }
# 문16_대화빈도_맵 = {
#     1: '충분히', 2: '어느 정도', 3: '가끔', 4: '전혀 하지 않음'
# }
# 문17_중요도_맵 = {
#     1: '매우 중요', 2: '중요한 편', 3: '중요하지 않은 편', 4: '전혀 중요하지 않음'
# }

# # Part C. 정부 정책 인식
# 문18_정책평가_맵 = {
#     1: '매우 잘함', 2: '어느 정도 잘함', 3: '별로 못함', 4: '전혀 못함'
# }
# 문19_20_설명정도_맵 = {
#     1: '충분히', 2: '어느 정도', 3: '별로', 4: '전혀'
# }
# 문21_22_의견반영_맵 = {
#     1: '충분히', 2: '어느 정도', 3: '별로 못함', 4: '전혀 못함'
# }
# 문23_참여수준_맵 = {
#     1: '적극적 참여', 2: '의견 수렴', 3: '수립과정 공개', 4: '전문가가 수립'
# }
# 문24_참여필요성_맵 = {
#     1: '매우 필요', 2: '어느 정도 필요', 3: '별로 필요 없음', 4: '전혀 필요 없음'
# }
# 문25_참여여지_맵 = {
#     1: '충분히 열려 있음', 2: '어느 정도 열려 있음', 3: '별로 열려 있지 않음', 4: '전혀 열려 있지 않음'
# }
# 문26_참여의향_맵 = {
#     1: '적극적 참여', 2: '의견 제안 정도', 3: '사안에 따라', 4: '참여 의향 없음'
# }

# # DQ. 인구사회적 특성
# 직업_맵 = {
#     1: '농업/임업/축산/어업', 2: '자영업', 3: '판매·서비스직', 4: '사무직',
#     5: '기술·작업직', 6: '공무원·교사', 7: '전문직', 8: '가정주부',
#     9: '무직·은퇴', 10: '학생', 11: '기타'
# }
# 학력_맵 = {
#     1: '다니지 않음', 2: '초등학교', 3: '중학교', 4: '고등학교',
#     5: '전문대(2~3년)', 6: '대학교(4년)', 7: '대학원 이상'
# }
# 소득_맵 = {
#     1: '100만원 이하', 2: '101~200만원', 3: '201~300만원', 4: '301~400만원',
#     5: '401~500만원', 6: '501~600만원', 7: '601~700만원', 8: '701~800만원',
#     9: '801~900만원', 10: '901~1000만원', 11: '1001만원 이상'
# }
# 생활수준_맵 = {
#     1: '상', 2: '중상', 3: '중', 4: '중하', 5: '하'
# }

# # print(df['연령대'].value_counts())

# # ✔️ 성별 확인 (이미 텍스트)
# # print(df['성별'].value_counts())

# # ✔️ 기본 통계 확인
# print(df['기후변화_심각성인식'].value_counts())
# print(df['참여경험'].value_counts())

# # ✔️ 성별 vs 기후변화 심각성 인식
# cross_tab = pd.crosstab(df['기후변화_사회적_취약계층'], df['기후변화_심각성인식'], normalize='index') * 100
# print("\n[기후변화_사회적_취약계층 vs 기후변화 심각성 인식 비율 (%)]:")
# print(cross_tab.round(1))

#=====================================================
import pandas as pd

# 원본 파일 읽기
df = pd.read_csv("data/data.csv")

pd.set_option('display.max_rows', None)       # 모든 행 출력
pd.set_option('display.max_columns', None)    # 모든 열 출력
# pd.set_option('display.width', None)          # 줄 바꿈 없이 가로 출력
pd.set_option('display.max_colwidth', None)   # 셀 내용 생략 없이 출력

# 컬럼 매핑 및 정의
column_mapping = {
    "ID": "ID",
    "SQ1": "gender",
    "SQ2": "age",
    "SQ2_R": "age_group",
    "SQ3": "region",

    "Q1": "climate_issue",
    "Q2": "climate_change_serious",
    
    "Q4": "reason_solution",
    "Q5": "human_rights_effect",
    
    "Q8": "climate_life_effect",
  
    "Q10": "climate_info",
    "Q11": "climate_rights_effect",

    "Q15": "participation", 
    "Q16": "conversation", 

    "Q18": "policy_score", 
    "Q19": "access",
    "Q20": "gov_info", 
    "Q21": "citizen_reflect", 
    "Q22": "poor_reflect", 
    "Q23": "citizen_opinion",
    "Q24": "citizen_necessity",
    "Q25": "citizen_intention",
    "Q26": "citizen_participation",

    "DQ1": "job",
    "DQ2": "education",
    "DQ3": "income",
    "DQ4": "living_level"
}

# 컬럼 이름 변경
df.rename(columns=column_mapping, inplace=True)

# 매핑되지 않은 컬럼 제거
columns_to_keep = column_mapping.values()  # rename 이후라 values() 사용
df = df[[col for col in df.columns if col in columns_to_keep]]

value_mappings = {
    "gender": {1: '남성', 2: '여성'},
    "age_group": {1: '10대', 2: '20대', 3: '30대', 4: '40대', 5: '50대', 6: '60대 이상'},
    "region": {
        1: '서울', 2: '부산', 3: '대구', 4: '인천', 5: '광주', 6: '대전', 7: '울산',
        8: '경기', 9: '강원', 10: '충북', 11: '충남', 12: '세종', 13: '전북', 14: '전남',
        15: '경북', 16: '경남', 17: '제주'
    },
    "climate_issue": {1: '매우 많다', 2: '어느정도 있다', 3: '별로 없다', 4: '전혀 없다'},
    "climate_change_serious": {1: '매우 심각하다', 2: '어느정도 심각하다', 3: '별로 심각하지 않다', 4: '전혀 심각하지 않다'},
    "reason_solution": {1: '매우 잘 안다', 2: '어느정도 안다', 3: '잘 모른다', 4: '전혀 모른다'},
    "human_rights_effect": {
        1: '생명 위협', 2: '건강 위협', 3: '주거환경 우려', 4: '식량/물 우려',
        5: '경제적 자유 침해', 6: '기타'
    },
    "climate_life_effect": {1: '매우 심각하다', 2: '어느정도 심각하다', 3: '별로 심각하지 않다', 4: '전혀 심각하지 않다'},
    "climate_inform": {1: '매우 자주', 2: '어느정도 자주', 3: '별로 접하지 않음', 4: '전혀 접하지 않음'},
    "climate_rights_effect": {1: '매우 자주', 2: '어느정도 자주', 3: '별로 접하지 않음', 4: '전혀 접하지 않음'},
    "participation": {1: '자주', 2: '가능한 자주', 3: '참여한 적 있음', 4: '전혀 없음'},
    "conversation": {1: '충분히', 2: '어느 정도', 3: '가끔', 4: '전혀 하지 않음'},
    "policy_score": {1: '매우 잘함', 2: '어느 정도 잘함', 3: '별로 못함', 4: '전혀 못함'},
    "access": {1: '충분히', 2: '어느 정도', 3: '별로', 4: '전혀'},
    "gov_info": {1: '충분히', 2: '어느 정도', 3: '별로', 4: '전혀'},
    "citizen_reflect": {1: '충분히', 2: '어느 정도', 3: '별로 못함', 4: '전혀 못함'},
    "poor_reflect": {1: '충분히', 2: '어느 정도', 3: '별로 못함', 4: '전혀 못함'},
    "citizen_opinion": {1: '적극적 참여', 2: '의견 수렴', 3: '수립과정 공개', 4: '전문가가 수립'},
    "citizen_necessity": {1: '매우 필요', 2: '어느 정도 필요', 3: '별로 필요 없음', 4: '전혀 필요 없음'},
    "citizen_intention": {1: '충분히 열려 있음', 2: '어느 정도 열려 있음', 3: '별로 열려 있지 않음', 4: '전혀 열려 있지 않음'},
    "citizen_participation": {1: '적극적 참여', 2: '의견 제안 정도', 3: '사안에 따라', 4: '참여 의향 없음'},
    "job": {
        1: '농업/임업/축산/어업', 2: '자영업', 3: '판매·서비스직', 4: '사무직',
        5: '기술·작업직', 6: '공무원·교사', 7: '전문직', 8: '가정주부',
        9: '무직·은퇴', 10: '학생', 11: '기타'
    },
    "education": {1: '다니지 않음', 2: '초등학교', 3: '중학교', 4: '고등학교', 5: '전문대(2~3년)', 6: '대학교(4년)', 7: '대학원 이상'},
    "income": {
        1: '100만원 이하', 2: '101~200만원', 3: '201~300만원', 4: '301~400만원',
        5: '401~500만원', 6: '501~600만원', 7: '601~700만원', 8: '701~800만원',
        9: '801~900만원', 10: '901~1000만원', 11: '1001만원 이상'
    },
    "living_level": {1: '상', 2: '중상', 3: '중', 4: '중하', 5: '하'}
}

# 7. ID별로 정렬 (선택사항)
df.sort_values('ID', inplace=True)

# 8. 변환된 데이터 확인 (예: 상위 10개 출력)
print(df.head(10))

# 9. 필요시 저장
df.to_csv("data/processed_data.csv", index=False)



# print(df.columns)

# # print(df["정책 수립 시 고려사항"])



# 단일응답비율 엑셀 저장 ---------------------------------------------------
 
# # 단일항목 응답비율 출력
# for col in column_mapping.values():
#     print(f"\n📊 [{col}] 응답 비율 (%)")
#     proportion = df[col].value_counts(normalize=True, dropna=False) * 100
#     print(proportion.round(1))



# # df.to_excel("data/설문결과.xlsx", index=False, sheet_name="설문결과")
# # 엑셀 저장
# with pd.ExcelWriter("data/설문결과2.xlsx", engine="openpyxl") as writer:
#     df.to_excel(writer, sheet_name="설문결과2", index=False)



# -------------------------------------------
# 변경된 결과 저장 (선택)
# df.to_csv("답변 파일.csv", index=False)

# 확인
# print(df.head())

# vs 
# cross_tab = pd.crosstab(df['응답자ID'], df['기후변화 심각성 인식'], normalize='index') * 100
# print("\n[응답자ID vs 기후변화 심각성 인식 (%)]:")
# print(cross_tab.round(1))


# ===============시각화 ================================

# import pandas as pd
# import seaborn as sns
# import matplotlib.pyplot as plt

# # 한글 폰트 설정 (Windows 기준)
# plt.rcParams['font.family'] = 'Malgun Gothic'  # Mac은 'AppleGothic'
# plt.rcParams['axes.unicode_minus'] = False

# # 교차표 생성 (이미 있다면 생략 가능)
# cross_tab = pd.crosstab(
#     df['기후변화 인권영향 인식'],
#     df['기후변화 심각성 인식'],
#     normalize='index'
# ) * 100
# cross_tab = cross_tab.round(1)

# # 교차표 형태를 그래프용으로 melt (세로형 데이터로 변환)
# cross_tab_reset = cross_tab.reset_index().melt(id_vars='기후변화 인권영향 인식',
#                                                var_name='기후변화 심각성 인식',
#                                                value_name='비율')

# # 막대그래프 그리기
# plt.figure(figsize=(10, 6))
# sns.barplot(
#     data=cross_tab_reset,
#     x='기후변화 인권영향 인식',
#     y='비율',
#     hue='기후변화 심각성 인식'
# )

# plt.title('기후변화 인권영향 인식 vs 기후변화 심각성 인식', fontsize=14)
# plt.ylabel('비율 (%)')
# plt.xlabel('기후변화 인권영향 인식')
# plt.legend(title='기후변화 심각성 인식')
# plt.tight_layout()
# plt.show()





